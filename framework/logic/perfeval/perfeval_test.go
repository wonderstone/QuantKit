package perfeval

import (
	"strings"
	"testing"

	"github.com/gocarina/gocsv"
	"github.com/stretchr/testify/require"
	"github.com/wonderstone/QuantKit/tools/recorder"
)

// test NewPerfEval
func TestNewPerfEval(t *testing.T) {
	var record []recorder.AssetRecord

	csvContent := `date,time,market-val,margin,fund-avail,total-asset,profit,commission,account,mode
2005-01-01,17:00:00,0,0,1000000,1000000,0,0,stock,Sim
2018-01-02,17:00:00,53473.29999999998,53473.29999999998,881886.799999996,999595.9999999959,-201.9999999999996,201.9999999999996,stock,Sim
2018-01-03,17:00:00,106915.79999999994,106915.79999999994,763198.9199999924,999196.0399999922,-401.9799999999978,401.9799999999978,stock,Sim
2018-01-04,17:00:00,162957.2000000002,162957.2000000002,642016.9399999896,998775.8799999898,-612.059999999996,612.059999999996,stock,Sim
2018-01-05,17:00:00,217246.0000000003,217246.0000000003,522424.42999998893,998369.8599999895,-815.0699999999941,815.0699999999941,stock,Sim
2018-01-08,17:00:00,272872.4000000002,272872.4000000002,401197.079999988,997955.7599999885,-1022.1199999999923,1022.1199999999923,stock,Sim
2018-01-09,17:00:00,330848.50000000023,330848.50000000023,277093.25999998685,997527.5199999874,-1236.2399999999905,1236.2399999999905,stock,Sim
2018-01-10,17:00:00,385937.50000000023,385937.50000000023,155409.8599999854,997123.5199999864,-1438.2399999999886,1438.2399999999886,stock,Sim
2018-01-11,17:00:00,440385.5000000001,440385.5000000001,34149.2899999852,996725.579999986,-1637.2099999999868,1637.2099999999868,stock,Sim
2018-01-12,17:00:00,498155.7000000004,498155.7000000004,-90772.59000001464,996305.4199999863,-1847.289999999985,1847.289999999985,stock,Sim
2018-01-15,17:00:00,552640.3000000002,552640.3000000002,-213489.12000001545,995915.5599999849,-2042.2199999999832,2042.2199999999832,stock,Sim
2018-01-16,17:00:00,611347.8000000011,611347.8000000011,-340434.20000001625,995495.3999999856,-2252.3000000000275,2252.3000000000275,stock,Sim
2018-01-17,17:00:00,662009.2000000008,662009.2000000008,-460219.4700000158,995137.8599999852,-2431.070000000066,2431.070000000066,stock,Sim`

	// csv解析成AssetRecord
	err := gocsv.Unmarshal(strings.NewReader(csvContent), &record)
	if err != nil {
		return
	}

	PE := NewPerfEval(record)

	require.Equalf(
		t, 0.9951378599999852, PE.CalcPerfEvalResult(WithPerformanceIndicateType("TR")), "CalcPerfEvalResult failed",
	)

	require.Equalf(
		t, 1.5808703270674531, PE.CalcPerfEvalResult(WithPerformanceIndicateType("AR")), "CalcPerfEvalResult failed",
	)

	require.Equalf(
		t, 32.06005023292793, PE.CalcPerfEvalResult(WithPerformanceIndicateType("MR")), "CalcPerfEvalResult failed",
	)

	require.Equalf(
		t, 3.354371706040631, PE.CalcPerfEvalResult(WithPerformanceIndicateType("SR"), WithRiskFreeRate(0.03)),
		"CalcPerfEvalResult failed",
	)

}

// split "2009.08.18T15:00:00.000" with T
func TestSplit(t *testing.T) {
	s := "2009.08.18T15:00:00.000"
	s1 := strings.Split(s, "T")
	if s1[0] != "2009.08.18" {
		t.Error("Split failed")
	}
}
